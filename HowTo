Subdomain Bruteforce Tool

A simple Python script to brute-force subdomains for a given base domain using a wordlist.

Installation:
    # Clone the repository (replace URL with your repo URL)
    git clone https://github.com/yourusername/subdomain-bruteforce.git
    cd subdomain-bruteforce

    # (Optional) Create and activate a virtual environment
    python3 -m venv venv
    source venv/bin/activate  # On Windows: venv\\Scripts\\activate

    # Install dependencies (none, uses Python standard library)
    # If you add dependencies later, list them in requirements.txt and run:
    # pip install -r requirements.txt

Usage:
    # Run the script
    python3 subdomain_bruteforce.py

    # You will be prompted to enter:
    # - Base domain (e.g., example.com)
    # - Path to your wordlist file

    # Example wordlist path formats supported:
    # "/path/to/wordlist.txt"
    # '~/lists/wordlist.txt'

    # The script will attempt DNS resolution on each entry and print any valid subdomains:
    # [+] Found: admin.example.com -> 192.168.1.10

Command-line Arguments (future enhancement):
    # - Add argparse support to accept --domain and --wordlist as flags
    # - Output results to a file with --output
    # - Enable threading with --threads N
